{"remainingRequest":"C:\\Users\\我的MiBook\\Desktop\\my program\\jdmall\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\我的MiBook\\Desktop\\my program\\jdmall\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\我的MiBook\\Desktop\\my program\\jdmall\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\我的MiBook\\Desktop\\my program\\jdmall\\src\\pages\\Home.vue?vue&type=template&id=5a90ec03&","dependencies":[{"path":"C:\\Users\\我的MiBook\\Desktop\\my program\\jdmall\\src\\pages\\Home.vue","mtime":1592464064781},{"path":"C:\\Users\\我的MiBook\\Desktop\\my program\\jdmall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\我的MiBook\\Desktop\\my program\\jdmall\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\我的MiBook\\Desktop\\my program\\jdmall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\我的MiBook\\Desktop\\my program\\jdmall\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}